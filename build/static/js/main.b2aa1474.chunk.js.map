{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/home/Home.js","components/Products.js","redux/actionCreator.js","redux/actionTypes.js","components/Header.js","components/Footer.js","components/AboutUs.js","components/Main.js","redux/productReducer.js","redux/Auth.js","App.js","redux/createStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","Home","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","products","length","previous","slides","map","item","CarouselItem","tag","key","_id","onExiting","onExited","src","image","alt","name","CarouselCaption","captionText","contact","captionHeader","label","price","toFixed","isLoading","errMess","Jumbotron","id","width","height","Carousel","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","direction","directionText","RenderProducts","auth","deleteItem","Card","CardImg","isAuthenticated","CardImgOverlay","loggedUser","postedBy","Button","color","outline","onClick","CardBody","CardTitle","CardText","Products","toggleModal","setState","isModalOpen","state","fileSelectedHandler","evt","selectedFile","imageFile","files","handleAddProduct","event","fd","FormData","append","lable","value","description","postProduct","preventDefault","this","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","onChange","innerRef","input","placeholder","Component","requestLogin","Creds","receivedtLogin","user_details","loginError","errmess","fetchProducts","dispatch","loadProducts","localStorage","getItem","console","log","fetch","then","res","ok","error","Error","status","statusText","response","err","json","addProducts","catch","productsFailed","message","payload","Header","toggleNav","isNavOpen","handleLogin","loginUser","username","password","handleLogOut","logOut","signUp","signUpSelected","handleSignUp","signupNewUser","firstname","lastname","Navbar","dark","expand","to","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","user","ps","fname","Lastname","check","Footer","href","About","Breadcrumb","BreadcrumbItem","active","title","Main","ids","counter","match","getMatchParams","params","userId","logoutUser","path","component","exact","AboutUs","withRouter","connect","cred","method","headers","body","JSON","stringify","success","setItem","token","user_Id","creds","parse","removeItem","info","requestSignupDetails","product","bearer","credentials","itemId","productsReducer","action","Auth","App","store","createStore","combineReducers","applyMiddleware","thunk","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ySAUeA,EARC,WACZ,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,iDAChB,8CCNEC,EAAU,6C,wCC6HTC,EA5GF,SAACC,GAAW,IAAD,EAEgBC,mBAAS,GAFzB,mBAEfC,EAFe,KAEFC,EAFE,OAGYF,oBAAS,GAHrB,mBAGfG,EAHe,KAGJC,EAHI,KAKhBC,EAAO,WACX,IAAIF,EAAJ,CACA,IAAMG,EAAYL,IAAgBF,EAAMQ,SAASC,OAAS,EAAI,EAAIP,EAAc,EAChFC,EAAeI,KAGXG,EAAW,WACf,IAAIN,EAAJ,CACA,IAAMG,EAA4B,IAAhBL,EAAoBF,EAAMQ,SAASC,OAAS,EAAIP,EAAc,EAChFC,EAAeI,KAOXI,EAASX,EAAMQ,SAASI,KAAI,SAACC,GACjC,OAEE,kBAACC,EAAA,EAAD,CAEEjB,UAAU,aACVkB,IAAI,MACJC,IAAKH,EAAKI,IACVC,UAAW,kBAAMb,GAAa,IAC9Bc,SAAU,kBAAMd,GAAa,KAE7B,yBAAKR,UAAU,wBAAwBuB,IAAKtB,EAAUe,EAAKQ,MAAOC,IAAKT,EAAKU,OAC5E,kBAACC,EAAA,EAAD,CAAiB3B,UAAU,eAAe4B,YAAaZ,EAAKa,QAASC,cACnE,6BACE,2BAAId,EAAKe,MAAT,IAAgB,8BAChB,4BAAKf,EAAKgB,MAAQ,KAAKC,QAAQ,GAA/B,IAAmC,6CAS7C,OAAI9B,EAAM+B,UACA,kBAAC,EAAD,MAID/B,EAAMgC,QAEX,yBAAKnC,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAKG,EAAMgC,WASf,6BACE,kBAACC,EAAA,EAAD,KACF,yBAAKpC,UAAU,aACf,wBAAIA,UAAU,6BAAd,eAAsD,0BAAMqC,GAAG,cAAT,cACrD,iCACA,yBAAKrC,UAAU,2BACR,mFACA,uBAAGA,UAAU,qBAAb,yDAKX,yBAAKA,UAAU,aAEV,6BAASA,UAAU,mCACd,yBAAKA,UAAU,cACZ,yBAAMqC,GAAG,aAAad,IAAI,sBAAsBE,IAAI,eAAea,MAAM,MAAMC,OAAO,UAI5F,iCACA,yBAAKvC,UAAU,iCACX,6BAEE,kBAACwC,EAAA,EAAD,CACEnC,YAAaA,EACbI,KAAMA,EACNI,SAAUA,EACVb,UAAU,SAEV,kBAACyC,EAAA,EAAD,CAAoBzC,UAAU,uBAAuB0C,MAAOvC,EAAMQ,SAAUN,YAAaA,EAAasC,eA7EpG,SAACC,GACbrC,GACJD,EAAesC,MA4EA9B,EACD,kBAAC+B,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,WAAWJ,eAAgB9B,IAC3E,kBAACgC,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBlC,W,gHCzGnFuC,EAAiB,SAAC,GAAgC,IAA9BhC,EAA6B,EAA7BA,KAAMiC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAGlC,OACIlC,EAAKD,KAAI,SAACC,GAEN,OACI,yBAAKG,IAAKH,EAAKI,IAAKpB,UAAU,uBAC1B,yBAAKqC,GAAG,iBACJ,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASd,MAAM,OAAOf,IAAKtB,EAAUe,EAAKQ,MAAOC,IAAKT,EAAKe,QAC1DkB,EAAKI,gBACF,kBAACC,EAAA,EAAD,KAEKL,EAAKM,aAAevC,EAAKwC,SAASpC,IAC/B,kBAACqC,EAAA,EAAD,CAAQC,MAAM,SAASC,SAAO,EAACC,QAAS,kBAAMV,EAAWlC,EAAKI,OAC1D,0BAAMpB,UAAU,iBAER,MAIlB,KAEN,kBAAC6D,EAAA,EAAD,CAAU7D,UAAU,YAChB,kBAAC8D,EAAA,EAAD,KAAW,0CAAX,IAAoC9C,EAAKe,OACzC,kBAACgC,EAAA,EAAD,KAAU,0CAAV,IAAmC/C,EAAKgB,MAAxC,IAA+C,qCAC/C,kBAAC+B,EAAA,EAAD,KAAU,4CAAV,IAAqC/C,EAAKa,iBA4K3DmC,E,kDA9HX,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IAOV8D,YAAc,WACV,EAAKC,SAAS,CAAEC,aAAc,EAAKC,MAAMD,eAT1B,EAYnBE,oBAAsB,SAACC,GACnB,EAAKJ,SAAS,CAAEK,aAAc,EAAKC,UAAUC,MAAM,MAbpC,EAenBC,iBAAmB,SAACC,GAChB,EAAKV,cACL,IAAMW,EAAK,IAAIC,SACfD,EAAGE,OAAO,YAAa,EAAKV,MAAMG,cAClCK,EAAGE,OAAO,OAAQ,EAAKV,MAAMG,aAAa7C,MAC1CkD,EAAGE,OAAO,QAAS,EAAKC,MAAMC,OAC9BJ,EAAGE,OAAO,QAAS,EAAK9C,MAAMgD,OAC9BJ,EAAGE,OAAO,UAAW,EAAKjD,QAAQmD,OAClCJ,EAAGE,OAAO,cAAe,EAAKG,YAAYD,OAC1C,EAAK7E,MAAM+E,YAAYN,GACvBD,EAAMQ,kBAvBN,EAAKf,MAAQ,CACTD,aAAa,EACbI,aAAc,MAJH,E,qDA8BT,IAAD,OAEL,OAAIa,KAAKjF,MAAM+B,UAEP,yBAAKlC,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPoF,KAAKjF,MAAMgC,QAEZ,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKoF,KAAKjF,MAAMgC,WAOxB,oCACEiD,KAAKjF,MAAM8C,KAAKI,gBAClB,yBAAKrD,UAAU,YACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,+BAEX,yBAAKA,UAAU,SACX,yCAEJ,yBAAKA,UAAU,gBACX,kBAACyD,EAAA,EAAD,CAAQE,SAAO,EAACC,QAASwB,KAAKnB,YAAajE,UAAU,iBACjD,0BAAMA,UAAU,eADpB,YAKT,KAIC,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAgBgB,KAAMoE,KAAKjF,MAAMQ,SAAUsC,KAAMmC,KAAKjF,MAAM8C,KACxDC,WAAYkC,KAAKjF,MAAM+C,cAG/B,kBAACmC,EAAA,EAAD,CAAOC,OAAQF,KAAKhB,MAAMD,YAAaoB,OAAQH,KAAKnB,aAChD,kBAACuB,EAAA,EAAD,CAAaD,OAAQH,KAAKnB,aAAa,0BAAMjE,UAAU,uBAAvD,QACA,kBAACyF,EAAA,EAAD,CAAWzF,UAAU,aACjB,kBAAC0F,EAAA,EAAD,CAAMC,SAAUP,KAAKV,kBACjB,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,aAAf,0BACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,YAAYX,KAAK,YAAYuE,SAAUb,KAAKf,oBAC9D6B,SAAU,SAACC,GAAD,OAAW,EAAK3B,UAAY2B,MAO9C,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,UACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,QAAQX,KAAK,QAAQ0E,YAAY,QACnDF,SAAU,SAACnB,GAAD,OAAW,EAAKA,MAAQA,MAE1C,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,UACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,QAAQX,KAAK,QAAQ0E,YAAY,QACnDF,SAAU,SAAClE,GAAD,OAAW,EAAKA,MAAQA,MAE1C,kBAAC4D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,cACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,UAAUX,KAAK,UAAU0E,YAAY,UACvDF,SAAU,SAACrE,GAAD,OAAa,EAAKA,QAAUA,MAE9C,kBAAC+D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,eAAf,gBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAW3D,GAAG,cAAcX,KAAK,cAAc0E,YAAY,cACnEF,SAAU,SAACjB,GAAD,OAAiB,EAAKA,YAAcA,MAEtD,kBAACW,EAAA,EAAD,KACI,kBAACnC,EAAA,EAAD,CAAQzD,UAAU,aAAagG,KAAK,SAAShB,MAAM,UAAnD,oB,GAlHjBqB,a,OCjCVC,EAAa,SAACC,GACzB,MAAM,CACJP,KC7CyB,gBD8CzBO,UAGSC,EAAe,SAACC,GAC3B,MAAM,CACJT,KClDyB,gBDmDzBS,iBAMSC,EAAW,SAACC,GACvB,MAAM,CACJX,KC1DwB,eD2DxBW,YA4ESC,EAAe,kBAAK,SAACC,GAKhC,OAJAA,EAASC,GAAa,IAIP,cAFDC,aAAaC,QAAQ,WAInCC,QAAQC,IAAI,qBAAsBH,aAAaC,QAAQ,WAChDG,MAAMlH,EAAU,YACtBmH,MAAK,SAACC,GACL,GAAGA,EAAIC,GACP,OAAOD,EAEL,IAAIE,EAAQ,IAAIC,MAAM,SAAUH,EAAII,OAAS,IAAKJ,EAAIK,YAEtD,MADAH,EAAMI,SAAUN,EACVE,KAER,SAACK,GACD,MAAMA,KAENR,MAAK,SAACC,GAAD,OAAOA,EAAIQ,UAChBT,MAAK,SAACzG,GAAYkG,EAASiB,EAAYnH,OACvCoH,OAAM,SAACH,GAAD,OAAQf,EAASmB,EAAeJ,EAAIK,eAK5ChB,QAAQC,IAAI,cAAeH,aAAaC,QAAQ,WACzCG,MAAMlH,EAAO,mBAAe8G,aAAaC,QAAQ,YACvDI,MAAK,SAACC,GACL,GAAGA,EAAIC,GACP,OAAOD,EAEL,IAAIE,EAAQ,IAAIC,MAAM,SAAUH,EAAII,OAAS,IAAKJ,EAAIK,YAEtD,MADAH,EAAMI,SAAUN,EACVE,KAER,SAACK,GACD,MAAMA,KAENR,MAAK,SAACC,GAAD,OAAOA,EAAIQ,UAChBT,MAAK,SAACzG,GAAYkG,EAASiB,EAAYnH,OACvCoH,OAAM,SAACH,GAAD,OAAQf,EAASmB,EAAeJ,EAAIK,gBAMhCH,EAAc,SAACnH,GAAD,MACvB,CAAEqF,KC9LoB,eD+LvBkC,QAAQvH,IAGEmG,EAAe,iBAC1B,CAAEd,KClM0B,qBDoMjBgC,EAAiB,SAACrB,GAAD,MAC7B,CACEX,KCrM0B,kBDsM1BW,Y,+DE8DWwB,E,kDAhQX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IAQViI,UAAY,WACR,EAAKlE,SAAS,CAAEmE,WAAY,EAAKjE,MAAMiE,aAVxB,EAYnBpE,YAAc,WACV,EAAKC,SAAS,CAAEC,aAAc,EAAKC,MAAMD,eAb1B,EAenBmE,YAAc,SAAC3D,GACX,EAAKV,cACL,EAAK9D,MAAMoI,UAAU,CAAEC,SAAU,EAAKA,SAASxD,MAAOyD,SAAU,EAAKA,SAASzD,QAC9EL,EAAMQ,kBAlBS,EAoBnBuD,aAAe,SAAC/D,GACZ,EAAKxE,MAAMwI,SACXhE,EAAMQ,kBAtBS,EAwBnByD,OAAS,WACL,EAAK1E,SAAS,CAAE2E,gBAAiB,EAAKzE,MAAMyE,iBAC5C,EAAK5E,eA1BU,EA6BnB6E,aAAe,SAACnE,GACZ,EAAKiE,SACL3B,QAAQC,IAAI,EAAK/G,OACjB,EAAKA,MAAM4I,cAAc,CAAEP,SAAU,EAAKA,SAASxD,MAAOyD,SAAU,EAAKA,SAASzD,MAAOgE,UAAW,EAAKA,UAAUhE,MAAOiE,SAAU,EAAKA,SAASjE,QAClJL,EAAMQ,kBA/BN,EAAKf,MAAQ,CACTiE,WAAW,EACXlE,aAAa,EAEb0E,gBAAgB,GANL,E,qDAmCT,IAAD,OAGL,OAEI,gCACI,kBAACK,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,KAAKpJ,UAAU,yBAC/B,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,iBACV,kBAAC,IAAD,CAASA,UAAU,+BAA+BqJ,GAAG,SAClD,yBAAKhH,GAAG,YACJ,yBAAKd,IAAI,aAAae,MAAM,MAAMC,OAAO,KAAKd,IAAI,WAG1D,kBAAC6H,EAAA,EAAD,CAAatJ,UAAU,eAAeqJ,GAAG,SACrC,wBAAIhH,GAAG,IAAP,cAEJ,yBAAKrC,UAAU,iBACX,kBAACuJ,EAAA,EAAD,CAAe3F,QAASwB,KAAKgD,UAAWpI,UAAU,uBAClD,kBAACwJ,EAAA,EAAD,CAAUlE,OAAQF,KAAKhB,MAAMiE,UAAWoB,QAAM,GAC1C,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS3J,UAAU,WAAWqJ,GAAG,SAC7B,0BAAMrJ,UAAU,oBAAhB,WAGPoF,KAAKjF,MAAM8C,KAAKM,WACb,kBAACoG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS3J,UAAU,WAAWqJ,GAAE,oBAAejE,KAAKjF,MAAM8C,KAAKM,aAC3D,0BAAMvD,UAAU,oBAAhB,eAGR,kBAAC2J,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS3J,UAAU,WAAWqJ,GAAG,aAC7B,0BAAMrJ,UAAU,oBAAhB,eAMZ,kBAAC2J,EAAA,EAAD,KACI,kBAAC,IAAD,CAAS3J,UAAU,WAAWqJ,GAAG,YAC7B,0BAAMrJ,UAAU,oBAAhB,kBAYpB,yBAAKA,UAAU,+BAEboF,KAAKjF,MAAM8C,KAAKI,gBAmBP,yBAAKrD,UAAU,qBACX,yBAAKA,UAAU,kCAAmCoF,KAAKjF,MAAM8C,KAAK2G,KAAKpB,UAEvE,0BAAO5E,QAASwB,KAAKsD,aAAc1I,UAAU,aACxCoF,KAAKjF,MAAM8C,KAAKf,UACb,0BAAMlC,UAAU,iCACd,0BAAMA,UAAU,0BAAhB,YAvBd,yBAAMA,UAAU,gBAEZ,0BAAO4D,QAASwB,KAAKnB,YAAajE,UAAU,kBAEvCoF,KAAKjF,MAAM8C,KAAKf,UACb,0BAAMlC,UAAU,iCACd,0BAAMA,UAAU,cAAhB,UAGV,0BAAO4D,QAASwB,KAAKwD,OAAQ5I,UAAU,iBACnC,0BAAMA,UAAU,cAAhB,aAqBXoF,KAAKhB,MAAMiE,UACV,yBAAKrI,UAAU,6CAEboF,KAAKjF,MAAM8C,KAAKI,gBAmBP,yBAAMrD,UAAU,OACZ,yBAAKA,UAAU,wBAAyBoF,KAAKjF,MAAM8C,KAAK2G,KAAKpB,UAE7D,0BAAO5E,QAASwB,KAAKsD,aAAc1I,UAAU,iBAExCoF,KAAKjF,MAAM8C,KAAKf,UACb,0BAAMlC,UAAU,iCACd,0BAAMA,UAAU,gBAAhB,YAxBd,yBAAMA,UAAU,OAEZ,0BAAO4D,QAASwB,KAAKnB,YAAajE,UAAU,kBAEvCoF,KAAKjF,MAAM8C,KAAKf,UACb,0BAAMlC,UAAU,iCACd,0BAAMA,UAAU,gBAAhB,UAGV,0BAAO4D,QAASwB,KAAKwD,OAAQ5I,UAAU,iBACnC,0BAAMA,UAAU,cAAhB,aAuBpB,iCAwBpB,6BACMoF,KAAKhB,MAAMyE,eA6BT,kBAACxD,EAAA,EAAD,CAAOC,OAAQF,KAAKhB,MAAMD,YAAaoB,OAAQH,KAAKwD,QAEhD,kBAACpD,EAAA,EAAD,CAAaD,OAAQH,KAAKwD,QAA1B,iBACA,kBAACnD,EAAA,EAAD,CAAWzF,UAAU,aACjB,kBAAC0F,EAAA,EAAD,CAAMC,SAAUP,KAAK0D,cACjB,kBAAClD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,aACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,WAAWX,KAAK,WAClC0E,YAAY,WAAWF,SAAU,SAACC,GAAD,OAAW,EAAKqC,SAAWrC,MAEpE,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,aACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAW3D,GAAG,WAAWX,KAAK,WAAW0E,YAAY,WAC7DF,SAAU,SAAC2D,GAAD,OAAQ,EAAKpB,SAAWoB,MAE1C,kBAACjE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,aAAf,eACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,YAAYX,KAAK,YAAY0E,YAAY,aAC3DF,SAAU,SAAC4D,GAAD,OAAW,EAAKd,UAAYc,MAE9C,kBAAClE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,cACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,WAAWX,KAAK,WAAW0E,YAAY,YACzDF,SAAU,SAAC6D,GAAD,OAAc,EAAKd,SAAWc,MAIhD,kBAACnE,EAAA,EAAD,KACI,kBAACnC,EAAA,EAAD,CAAQzD,UAAU,aAAagG,KAAK,SAAShB,MAAM,UAAnD,eAxDhB,kBAACK,EAAA,EAAD,CAAOC,OAAQF,KAAKhB,MAAMD,YAAaoB,OAAQH,KAAKnB,aAEhD,kBAACuB,EAAA,EAAD,CAAaD,OAAQH,KAAKnB,aAA1B,SACA,kBAACwB,EAAA,EAAD,CAAWzF,UAAU,aACjB,kBAAC0F,EAAA,EAAD,CAAMC,SAAUP,KAAKkD,aACjB,kBAAC1C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,aACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3D,GAAG,WAAWX,KAAK,WAClC0E,YAAY,WAAWF,SAAU,SAACC,GAAD,OAAW,EAAKqC,SAAWrC,MAEpE,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,aACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAW3D,GAAG,WAAWX,KAAK,WAAW0E,YAAY,WAC7DF,SAAU,SAAC2D,GAAD,OAAQ,EAAKpB,SAAWoB,MAG1C,kBAACjE,EAAA,EAAD,CAAWoE,OAAK,GACZ,kBAACnE,EAAA,EAAD,CAAOmE,OAAK,GACR,kBAACjE,EAAA,EAAD,CAAOC,KAAK,WAAW3D,GAAG,WAAWX,KAAK,aAD9C,gBAKJ,kBAACkE,EAAA,EAAD,KACI,kBAACnC,EAAA,EAAD,CAAQzD,UAAU,aAAagG,KAAK,SAAShB,MAAM,UAAnD,qB,GArNnBqB,aC2CN4D,G,uKA3CP,OAEI,yBAAKjK,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMqJ,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,cAGZ,yBAAKrJ,UAAU,kBACX,uCACA,iCAEI,uBAAGA,UAAU,sBAFjB,oBAE0D,+BAI9D,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCkK,KAAK,uBAAsB,uBAAGlK,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCkK,KAAK,2CAA0C,uBAAGlK,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCkK,KAAK,+BAA8B,uBAAGlK,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCkK,KAAK,uBAAsB,uBAAGlK,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCkK,KAAK,uBAAsB,uBAAGlK,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBkK,KAAK,WAAU,uBAAGlK,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,yE,GArCPqG,a,kBC+CN8D,OA9Cf,SAAehK,GAEX,OACI,yBAAKH,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACoK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMhB,GAAG,SAAT,SAChB,kBAACgB,GAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAKtK,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,6CACA,kHACA,uGAEA,uKAC0D,yCAD1D,OAEQ,0CAFR,+CAIJ,yBAAKA,UAAU,oBAGf,yBAAKA,UAAU,UACX,kBAACmD,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAU7D,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,sFACA,4BAAQA,UAAU,qBAAlB,gBAAmD,6BACnD,0BAAMuK,MAAM,gBAAZ,gICR1BC,G,4MACFpG,MAAM,CACFqG,IAAI,GACJC,QAAQ,G,kEAIPtF,KAAKjF,MAAMyG,kB,+BAGN,IAAD,OAaCjG,EAAW,SAAC,GAAa,IAAZgK,EAAW,EAAXA,MAIf,OACI,oCAEI,kBAAC,EAAD,CACIC,eAAkB,EAAKzK,MAAMyK,eAAeD,EAAME,OAAOC,QACzDnK,SAAU,EAAKR,MAAMQ,SAASA,SAC9BuB,UAAW,EAAK/B,MAAMQ,SAASuB,UAC/BC,QAAS,EAAKhC,MAAMQ,SAASwB,QAC7Bc,KAAQ,EAAK9C,MAAM8C,KACnBiC,YAAc,EAAK/E,MAAM+E,YACzBhC,WAAa,EAAK/C,MAAM+C,eAQxC,OACI,6BACA,kBAAC,EAAD,CAAQqF,UAAWnD,KAAKjF,MAAMoI,UAC9BtF,KAAMmC,KAAKjF,MAAM8C,KACjB0F,OAAQvD,KAAKjF,MAAM4K,WACnBhC,cAAe3D,KAAKjF,MAAM4I,gBAE1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiC,KAAK,QAAQC,UAxCf,WACT,OACA,kBAAC,EAAD,CACAtK,SAAU,EAAKR,MAAMQ,SAASA,SAC9BuB,UAAW,EAAK/B,MAAMQ,SAASuB,UAC/BC,QAAS,EAAKhC,MAAMQ,SAASwB,aAoCzB,kBAAC,IAAD,CAAO+I,OAAK,EAACF,KAAK,YAAYC,UAAWtK,IACzC,kBAAC,IAAD,CAAOuK,OAAK,EAACF,KAAK,oBAAqBC,UAAWtK,IAClD,kBAAC,IAAD,CAAOuK,OAAK,EAACF,KAAK,WAAYC,UAAWE,KACzC,kBAAC,IAAD,CAAU9B,GAAG,WAEjB,kBAAC,GAAD,W,GA3DOhD,aAkEJ+E,eAAWC,aApFF,SAACjH,GAAD,MAAY,CAChCzD,SAAUyD,EAAMzD,SAChBsC,KAAMmB,EAAMnB,SAEW,SAAC4D,GAAD,MAAgB,CACvC0B,UAAU,SAAC+C,GAAD,OAAUzE,GLbAN,EKamB+E,ELbT,SAACzE,GAIjC,OAFAA,EAASP,EAAaC,IAEfY,MAAMlH,EAAU,cAAc,CACnCsL,OAAO,OACPC,QAAS,CACP,eAAe,oBAEjBC,KAAMC,KAAKC,UAAUpF,KAEtBa,MAAK,SAACO,GACL,GAAIA,EAASL,GACb,OAAOK,EAEL,IAAIJ,EAAQ,IAAIC,MAAM,SAAUG,EAASF,OAAQ,IAAKE,EAASD,YAE/D,MADAH,EAAMI,SAAUA,EACVJ,KAER,SAACK,GACD,MAAMA,KAEPR,MAAK,SAACC,GAAD,OAAQA,EAAIQ,UACjBT,MAAK,SAACO,GACL,IAAGA,EAASiE,QAWV,CACF,IAAIrE,EAAQ,IAAIC,MAAM,SAAUG,EAASF,OAAQ,IAAKE,EAASD,YAE/D,MADAH,EAAMI,SAAUA,EACVJ,EAZJN,QAAQC,IAAI,aAAaX,GAC3BQ,aAAa8E,QAAQ,QAAQlE,EAASiC,KAAKkC,OAC3C/E,aAAa8E,QAAQ,QAAQH,KAAKC,UAAUpF,IAC5CQ,aAAa8E,QAAQ,OAAOlE,EAASiC,KAAKxI,KAC1CyF,EAASD,KAETC,EAASL,EAAe,CAACsF,MAAMnE,EAASmE,MAAMC,QAAQpE,EAASiC,KAAKxI,IAAI4K,MAAMN,KAAKO,MAAMP,KAAKC,UAAUpF,UASzGwB,OAAM,SAACH,GAAD,OAAQf,EAASH,EAAWkB,EAAIK,gBAzClB,IAAC1B,GKcpBwE,WAAW,kBAAMlE,GLoHS,SAACA,GAC7BA,EAhEM,CACJb,KC/D0B,mBD+H5Be,aAAamF,WAAW,SACxBnF,aAAamF,WAAW,SACxBnF,aAAamF,WAAW,QACxBrF,EA9DM,CACJb,KCpE0B,uBIS1B+C,cAAc,SAACoD,GAAD,OAAUtF,ELkFC,SAACsF,GAAD,OAAU,SAACtF,GAGtC,OAFAA,EAbgC,SAACsF,GACjC,MAAM,CACJnG,KC3EqC,6BD4ErCmG,QAUOC,CAAqBD,IAEvBhF,MAAMlH,EAAU,eAAe,CACpCsL,OAAS,OACTC,QAAS,CACP,eAAe,oBAEjBC,KAAKC,KAAKC,UAAUQ,KAErB/E,MAAK,SAACO,GACL,GAAGA,EAASL,GAGZ,OADCL,QAAQC,IAAIS,GACNA,EAGL,IAAIJ,EAAQ,IAAIC,MAAM,SAAUG,EAASF,OAAQ,KAAME,EAASD,YAEhE,MADAH,EAAMI,SAAWA,EACXJ,KAER,SAACA,GACD,MAAMA,KAEPH,MAAK,SAACO,GAAD,OAAYA,EAASE,UAC1BT,MAAK,SAACO,GAAYV,QAAQC,IAAIS,MAG9BI,OAAM,SAACH,GACNf,EAlCI,CACJb,KClFwB,gBDmFxBW,QAgCuBiB,EAAIK,cK/GMc,CAAcoD,KAC/CjH,YAAc,SAACmH,GAAD,OAAaxF,ELwLN,SAACwF,GAAD,OAAa,SAACxF,GACnC,IAAMyF,EAAS,UAAWvF,aAAaC,QAAQ,SAE/C,OADEC,QAAQC,IAAIoF,GACPnF,MAAMlH,EAAU,6BAA6B,CAClDsL,OAAQ,OACRE,KAAMY,EACNb,QAAQ,CACN,cAAiBc,GAEnBC,YAAc,gBAEfnF,MAAK,SAACO,GACL,GAAGA,EAASL,GACZ,OAAOK,EAEL,IAAIJ,EAAQ,IAAIC,MAAM,SAAUG,EAASF,OAAS,IAAKE,EAASD,YAEhE,MADAH,EAAMI,SAAUA,EACVJ,KAER,SAAAK,GAAQ,MAAMA,KACfR,MAAK,SAACC,GAAD,OAAOA,EAAIQ,UAChBT,MAAK,SAACC,GACHR,EAASD,QAEZmB,OAAM,SAACV,GAAOJ,QAAQC,IAAIG,EAAIY,SAC/BpB,EAASmB,EAAeX,EAAIY,cKjNQ/C,CAAYmH,KAChDnJ,WAAc,SAACb,GAAD,OAAQwE,GLoNC2F,EKpNmBnK,ELoNR,SAAAwE,GACpCI,QAAQC,IAAIjH,EAAU,YAAauM,GAEnC,IAAMF,EAAS,UAAWvF,aAAaC,QAAQ,SAE/C,OAAOG,MAAMlH,EAAU,YAAauM,EAAO,CACzCjB,OAAO,SACPC,QAAQ,CACN,cAAiBc,GAEnBC,YAAc,gBAEfnF,MAAK,SAACO,GACL,GAAGA,EAASL,GACZ,OAAOK,EAEL,IAAIJ,EAAQ,IAAIC,MAAM,SAAUG,EAASF,OAAS,IAAKE,EAASD,YAEhE,MADAH,EAAMI,SAAUA,EACVJ,KAER,SAAAK,GAAQ,MAAMA,KACfR,MAAK,SAACC,GAAD,OAASA,EAAIQ,UAClBT,MAAK,SAACC,GACLJ,QAAQC,IAAI,WAEZL,EAASD,EAAcG,aAAaC,QAAQ,cAE7Ce,OAAM,SAACH,GACNX,QAAQC,IAAIU,EAAIK,eA5BM,IAACuE,GKnNvB5B,eAAgB,SAACC,GAAD,OAAWhE,ELkPH,SAACgE,GAAD,OAAW,SAAAhE,GACrCE,aAAa8E,QAAQ,SAAShB,IKnPQD,CAAeC,KAInDjE,cAAe,kBAAOC,EAASD,SAsETyE,CAA6Cb,K,kBC7F1DiC,GAAiB,WAIlB,IAJmBrI,EAIpB,uDAJ0B,CACjClC,WAAU,EACVC,QAAQ,KACRxB,SAAS,IACX+L,EAAS,uCACP,OAAQA,EAAO1G,MACX,ILRmB,eKSf,OAAO,gBAAI5B,EAAX,CAAkBlC,WAAU,EAAMC,QAAQ,KAAKxB,SAAS+L,EAAOxE,UACnE,ILTuB,mBKUnB,OAAO,gBAAI9D,EAAX,CAAkBlC,WAAU,EAAKC,QAAQ,KAAKxB,SAAS,KAC3D,ILVsB,kBKWd,OAAO,gBAAIyD,EAAX,CAAkBlC,WAAU,EAAMC,QAAQuK,EAAOxE,QAAQvH,SAAS,KAC1E,QACI,OAAOyD,I,SCZNuI,GAAO,WAOL,IAPMvI,EAOP,uDAPe,CACzBlC,WAAW,EACXmB,kBAAiB0D,aAAaC,QAAQ,SACtC8E,MAAO/E,aAAaC,QAAQ,SAC5B4C,KAAM7C,aAAaC,QAAQ,SAAW0E,KAAKO,MAAMlF,aAAaC,QAAQ,UAAW,KACjF7E,QAAS,KACToB,WAAWwD,aAAaC,QAAQ,QAAUD,aAAaC,QAAQ,QAAS,MACzE0F,EAAW,uCACd,OAAQA,EAAO1G,MACX,INRyB,gBMSrB,OAAO,gBAAI5B,EAAX,CACIlC,WAAW,EACXmB,iBAAiB,EACjBuG,KAAM8C,EAAOV,QAErB,INbyB,gBMcrB,OAAO,gBACA5H,EADP,CAEIlC,WAAW,EACXmB,iBAAiB,EACjBlB,QAAS,GACT2J,MAAOY,EAAOjG,aAAaqF,MAC3BvI,WAAYmJ,EAAOjG,aAAasF,QAChCnC,KAAK8C,EAAOjG,aAAauF,QAIjC,INxBwB,eMyBpB,OAAO,gBAAI5H,EAAX,CACIlC,WAAW,EACXmB,iBAAiB,EACjBlB,QAASuK,EAAOzE,UAExB,IN5B0B,iBM6BtB,OAAO,gBAAI7D,EAAX,CACIlC,WAAW,EACXmB,iBAAiB,IAGzB,INjC0B,iBMkCtB,OAAO,gBAAIe,EAAX,CACIlC,WAAW,EACXmB,iBAAiB,EACjByI,MAAO,GACPlC,KAAM,KACNrG,WAAY,OAGpB,QACI,OAAOa,IC1BAwI,G,uKAhBX,IAAMC,ECHOC,aACTC,aAAgB,CACZpM,SAAS8L,GACTxJ,KAAK0J,KAETK,aAAgBC,ODDpB,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACjB,kBAAC,IAAD,KACM,6BACE,kBAAC,GAAD,a,GAPIxG,aEIE6G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1C,MACvB,2DCTN2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzG,MAAK,SAAA0G,GACJA,EAAaC,gBAEdhG,OAAM,SAAAR,GACLN,QAAQM,MAAMA,EAAMU,c","file":"static/js/main.b2aa1474.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loading = ()=>{\n    return(\n        <div className='col-12'>\n            <span className='fa-spinner fa-pulse fa-fw fa-3x text-primary'></span>\n            <p>Loading . . .</p>\n        </div>\n    )\n}\nexport default Loading;"," export const baseUrl = 'https://agile-hollows-94444.herokuapp.com/'\n\n    \n    // 'http://localhost:3000/'\n// \n","import React, { useState } from 'react';\nimport { Jumbotron } from 'reactstrap';\nimport Loading from '../LoadingComponent'\nimport { baseUrl } from '../../shared/baseUrl';\n\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n\n} from 'reactstrap';\n\n\n\n\nconst Home = (props) => {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === props.products.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? props.products.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = props.products.map((item) => {\n    return (\n\n      <CarouselItem\n\n        className=\"custom-tag\"\n        tag=\"div\"\n        key={item._id}\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n      >\n        <img className='img d-block img-fluid' src={baseUrl + item.image} alt={item.name} />\n        <CarouselCaption className=\"text-primary\" captionText={item.contact} captionHeader={\n          <div>\n            <p>{item.label} <em></em></p>\n            <p>{(item.price / 100).toFixed(2)} <em>Cedis</em></p>\n          </div>\n\n        } />\n      </CarouselItem>\n    )\n  })\n\n\n  if (props.isLoading) {\n    return (<Loading />)\n\n  }\n\n  else if (props.errMess) {\n    return (\n      <div className='container'>\n        <div className='row'>\n          <h4>{props.errMess}</h4>\n        </div>\n      </div>\n    )\n  }\n\n  else {\n    return (\n     \n      <div >\n        <Jumbotron >\n      <div className=\"container\">\n      <h1 className='welcome-lable text-center'> Welcome to <span id=\"brand-text\">cedi-mart</span></h1>\n       <section>\n       <div className='botron-text text-center'>\n              <h4 >A platform to advertize your products to the world.</h4>\n              <p className=\"d-none d-sm-block\">Nikt gives you power over your digital marketing.</p>\n            </div>\n       </section>       \n      </div>\n    </Jumbotron>\n   <div className='container'>\n        \n        <section className=\"d-md-none  d-lg-none visible-sm\">\n             <div className=\" item-tile\">\n                <img  id=\"item-photo\" src='/images/sleeveB.jpg' alt=\"item-display\" width=\"400\" height=\"250\"></img>\n             </div>\n\n          </section>\n          <section>\n          <div className='col-12 mb-5 d-none d-sm-block'>\n              <div>\n\n                <Carousel\n                  activeIndex={activeIndex}\n                  next={next}\n                  previous={previous}\n                  className='mt-5 '\n                >\n                  <CarouselIndicators className='corousel-indicators ' items={props.products} activeIndex={activeIndex} onClickHandler={goToIndex} />\n                  {slides}\n                  <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n                  <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n                </Carousel>\n              </div>\n            </div>\n          </section>\n            \n         </div>\n         </div>\n\n    )\n  }\n}\nexport default Home;","import React, { Component } from 'react';\nimport {\n    Card, CardImg, CardBody, CardTitle, CardText, CardImgOverlay,\n    Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Form\n} from 'reactstrap'\nimport Loading from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderProducts = ({ item, auth, deleteItem }) => {\n    // if( item.length >1)\n    // {\n    return (\n        item.map((item) => {\n\n            return (\n                <div key={item._id} className='col-md-4 col-sm-12 '>\n                    <div id='product-photo'>\n                        <Card>\n                            <CardImg width='100%' src={baseUrl + item.image} alt={item.label} />\n                            {auth.isAuthenticated ?\n                                <CardImgOverlay>\n\n                                    {auth.loggedUser === item.postedBy._id ?\n                                        <Button color='danger' outline onClick={() => deleteItem(item._id)}>\n                                            <span className='fa fa-times'></span>\n\n                                        </Button> : null\n                                    }\n\n                                </CardImgOverlay>\n                                : null\n                            }\n                            <CardBody className='cardbody'>\n                                <CardTitle><strong>Label:</strong> {item.label}</CardTitle>\n                                <CardText><strong>Price:</strong> {item.price} <i>cedis</i></CardText>\n                                <CardText><strong>Contact:</strong> {item.contact}</CardText>\n                            </CardBody>\n                        </Card>\n\n                    </div>\n                </div>\n            )\n        })\n    )\n\n    // }\n    // else{\n    //     return   (\n    //         <div className='col-12 col-md-5'>\n    //             <div  className=\"mt-5\">\n    //                 <Card>\n    //                 <CardImg width='100%' src={baseUrl+item.image}  alt={item.label}/>\n    //                 {auth.isAuthenticated ?\n    //                 <CardImgOverlay>\n\n    //                     {   auth.loggedUser===item.postedBy._id ?\n    //                         <Button color='danger' outline onClick={()=>deleteItem(item._id)}>                     \n    //                           <span className='fa fa-times'></span> \n\n    //                         </Button> :null\n    //                         }\n\n    //                 </CardImgOverlay>\n    //                  :null\n    //                     }\n    //                 <CardBody>\n    //                     <CardTitle><strong>Label:</strong> {item.label}</CardTitle>\n    //                     <CardText><strong>Price:</strong> {item.price} <i>cedis</i></CardText>\n    //                     <CardText><strong>Contact:</strong> {item.contact}</CardText>\n    //                 </CardBody>\n    //                 </Card>\n\n    //             </div>\n    //             </div>\n    //             )\n    // }\n\n}\n\n\nclass Products extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isModalOpen: false,\n            selectedFile: null\n        }\n    }\n\n    toggleModal = () => {\n        this.setState({ isModalOpen: !this.state.isModalOpen })\n        //\n    }\n    fileSelectedHandler = (evt) => {\n        this.setState({ selectedFile: this.imageFile.files[0] })\n    }\n    handleAddProduct = (event) => {\n        this.toggleModal();\n        const fd = new FormData()\n        fd.append('imageFile', this.state.selectedFile)\n        fd.append('name', this.state.selectedFile.name)\n        fd.append('label', this.lable.value)\n        fd.append('price', this.price.value)\n        fd.append('contact', this.contact.value)\n        fd.append('description', this.description.value)\n        this.props.postProduct(fd)\n        event.preventDefault()\n    }\n    // handleItemDelete=()=>{\n\n    // }\n    render() {\n\n        if (this.props.isLoading) {\n            return (\n                <div className='container'>\n                    <div className='row'>\n                        <Loading />\n                    </div>\n                </div>\n            )\n        }\n        else if (this.props.errMess) {\n            return (\n                <div className='container'>\n                    <div className='row'>\n                        <h4>{this.props.errMess}</h4>\n                    </div>\n                </div>\n            )\n        }\n        else\n            return (\n                <>\n                { this.props.auth.isAuthenticated  ?\n                <div className='mybotron'>\n                <div className='container'>\n                    <div className='row align-items-center mt-0'>\n\n                        <div className='col-6'>\n                            <h4>buy here</h4>\n                        </div>\n                        <div className='ml-auto mt-1'>\n                            <Button outline onClick={this.toggleModal} className='navbar-button'>\n                                <span className=\"fa fa-plus\"></span> Add</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>:null\n                }\n                    \n\n                    <div className='container'>\n\n                        <div className='row'>\n                            <RenderProducts item={this.props.products} auth={this.props.auth}\n                                deleteItem={this.props.deleteItem}\n                            />\n                        </div>\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                            <ModalHeader toggle={this.toggleModal}><span className='fa fa-plus ml-auto' ></span> Add</ModalHeader>\n                            <ModalBody className=\"ModalBody\">\n                                <Form onSubmit={this.handleAddProduct}>\n                                    <FormGroup >\n                                        <Label htmlFor=\"imageFile\"> Upload item mage File</Label>\n                                        <Input type=\"file\" id=\"imageFile\" name=\"imageFile\" onChange={this.fileSelectedHandler}\n                                            innerRef={(input) => this.imageFile = input} />\n                                    </FormGroup>\n                                    {/* <FormGroup>\n                             <Label htmlFor=\"name\"> Name</Label>\n                             <Input type=\"text\" id=\"name\" name=\"name\" placeholder='Name'\n                                 innerRef={(ps) => this.name = ps} />\n                         </FormGroup> */}\n                                    <FormGroup>\n                                        <Label htmlFor=\"lable\"> Label</Label>\n                                        <Input type=\"text\" id=\"lable\" name=\"lable\" placeholder='Label'\n                                            innerRef={(lable) => this.lable = lable} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"price\"> Price</Label>\n                                        <Input type=\"text\" id=\"price\" name=\"price\" placeholder='price'\n                                            innerRef={(price) => this.price = price} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"contact\"> Tel/Phone</Label>\n                                        <Input type=\"text\" id=\"contact\" name=\"contact\" placeholder='contact'\n                                            innerRef={(contact) => this.contact = contact} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"description\"> Description</Label>\n                                        <Input type=\"textarea\" id=\"description\" name=\"description\" placeholder='description'\n                                            innerRef={(description) => this.description = description} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Button className=\"bg-primary\" type=\"submit\" value=\"submit\">Submit</Button>\n                                    </FormGroup>\n                                </Form>\n                            </ModalBody>\n                        </Modal>\n\n                    </div>\n\n                </>\n            )\n    }\n\n}\nexport default Products;","import * as ActionTypes from './actionTypes';\nimport {baseUrl} from '../shared/baseUrl'\n\nexport const loginUser=(Creds) => (dispatch) => {\n\n  dispatch(requestLogin(Creds));\n\n  return fetch(baseUrl + 'users/login',{\n    method:'POST',\n    headers: { \n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify(Creds)\n  })\n  .then((response)=>{\n    if (response.ok)\n    return response\n    else{\n      var error = new Error('Error '+ response.status +\":\"+ response.statusText)\n      error.response= response\n      throw error\n    }\n  },(err)=>{\n    throw err\n  })\n  .then((res)=> res.json())\n  .then((response)=> {\n    if(response.success){\n      // console.log(\"token recieved\",response.user.token)\n      console.log(\"loginUsefr\",Creds)\n    localStorage.setItem('token',response.user.token);\n    localStorage.setItem('creds',JSON.stringify(Creds))\n    localStorage.setItem('user',response.user._id)\n    dispatch(fetchProducts ())\n   \n    dispatch(receivedtLogin({token:response.token,user_Id:response.user._id,creds:JSON.parse(JSON.stringify(Creds))}));\n\n  }\n  else{\n    var error = new Error('Error '+ response.status +\":\"+ response.statusText)\n    error.response= response\n    throw error\n  }\n  })\n  .catch((err)=> dispatch(loginError(err.message)))\n}\n\nexport const requestLogin=(Creds)=>{\n  return{\n    type:ActionTypes.LOGIN_REQUEST,\n    Creds\n  }\n}\nexport const receivedtLogin=(user_details)=>{\n  return{\n    type:ActionTypes.LOGIN_SUCCESS,\n    user_details\n  }\n}\n\n\n\nexport const loginError=(errmess)=>{\n  return{\n    type:ActionTypes.LOGIN_FAILED,\n    errmess\n  }\n}\n\nexport const requestLogout=()=>{\n  return{\n    type:ActionTypes.LOGOUT_REQUEST\n    \n  }\n}\nexport const receivelogout=()=>{\n  return{\n    type:ActionTypes.LOGOUT_SUCCESS\n    \n  }\n}\nexport const logoutFailed=(errmess)=>{\n  return{\n    type:ActionTypes.LOGOUT_FAILED,\n    errmess\n  }\n}\n\nexport const requestSignupDetails=(info)=>{\n  return{\n    type:ActionTypes.REQUEST_SIGNUP_CREDENTIALS,\n    info\n  }\n}\nexport const signupFailure=(errmess)=>{\n  return{\n    type:ActionTypes.SIGNUP_FAILED,\n    errmess\n  }\n}\nexport const signupNewUser = (info) => (dispatch) => {\n  dispatch(requestSignupDetails(info))\n\n  return fetch(baseUrl + 'users/signup',{\n    method : 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body:JSON.stringify(info)\n  })\n  .then((response)=>{\n    if(response.ok)\n   { \n     console.log(response)\n    return response\n  }\n    else{\n      var error = new Error('Error '+ response.status +' :'+ response.statusText)\n      error.response = response;\n      throw error\n    }\n  },(error)=>{\n    throw error\n  })\n  .then((response)=>response.json())\n  .then((response)=>{console.log(response)\n    \n  })\n  .catch((err)=>{\n    dispatch(signupFailure(err.message))\n  })\n}\n\nexport const logoutUser=() => (dispatch) =>{\n  dispatch(requestLogout())\n  localStorage.removeItem('token');\n  localStorage.removeItem('creds');\n  localStorage.removeItem('user');\n  dispatch( receivelogout())\n  // dispatch( receivedtLogin(''))\n}\nexport const fetchProducts =()=> (dispatch)=> {\n  dispatch(loadProducts(true));\n\n  let userId =  localStorage.getItem('params') \n\n  if( userId === 'undefined')\n{\n  console.log('expected undefined', localStorage.getItem('params') )\n  return fetch(baseUrl + 'products')\n  .then((res)=>{\n    if(res.ok)\n    return res\n    else{\n      var error = new Error('Error ' +res.status + ':'+ res.statusText)\n      error.response= res\n      throw error\n    }\n  },(err)=>{\n    throw err\n  })\n   .then((res)=>res.json())\n   .then((products)=>{dispatch(addProducts(products))})\n   .catch((err)=> dispatch(productsFailed(err.message))) \n\n\n}\nelse{\n  console.log('expected id', localStorage.getItem('params') )\n  return fetch(baseUrl + `products/${localStorage.getItem('params')}`)\n  .then((res)=>{\n    if(res.ok)\n    return res\n    else{\n      var error = new Error('Error ' +res.status + ':'+ res.statusText)\n      error.response= res\n      throw error\n    }\n  },(err)=>{\n    throw err\n  })\n   .then((res)=>res.json())\n   .then((products)=>{dispatch(addProducts(products))})\n   .catch((err)=> dispatch(productsFailed(err.message))) \n\n}\n}\n\n\n export const addProducts = (products) =>(\n     { type:ActionTypes.ADD_PRODUCTS,\n    payload:products}\n )\n\n export const loadProducts = () => (\n   { type:ActionTypes.PRODUCTS_LOADING }\n )\n export const productsFailed = (errmess) => (\n  { \n    type:ActionTypes.PRODUCTS_FAILED,\n    errmess\n  }\n)\nexport const postProduct=(product) => (dispatch)=>{\n    const bearer = 'Bearer ' +localStorage.getItem('token') \n      console.log(bearer)\n    return fetch(baseUrl + 'products/upload/addproduct',{\n      method: 'POST',\n      body: product,\n      headers:{\n        'Authorization': bearer\n      },\n      credentials : 'same-origin'\n    })\n    .then((response)=>{\n      if(response.ok)\n      return response\n      else{\n        var error = new Error('Error ' +response.status + ':'+ response.statusText)\n        error.response= response\n        throw error\n      }\n    },err => {throw err})\n    .then((res)=>res.json() )\n    .then((res)=>{\n        dispatch(fetchProducts())\n    })\n    .catch((res)=>{console.log(res.message);\n    dispatch(productsFailed(res.message))})\n}\n\n \nexport const deleteItem = (itemId) => dispatch =>{\n  console.log(baseUrl + 'products/'+ itemId) \n\n  const bearer = 'Bearer ' +localStorage.getItem('token')\n\n  return fetch(baseUrl + 'products/'+ itemId,{\n    method:'DELETE',\n    headers:{\n      'Authorization': bearer\n    },\n    credentials : 'same-origin'\n  })\n  .then((response)=>{\n    if(response.ok)\n    return response\n    else{\n      var error = new Error('Error ' +response.status + ':'+ response.statusText)\n      error.response= response\n      throw error\n    }\n  },err => {throw err})\n  .then((res) => res.json())\n  .then((res)=>{\n    console.log('Deleted'); \n    // dispatch(addProducts(res))\n    dispatch(fetchProducts(localStorage.getItem('token')))\n  })\n  .catch((err)=>{\n    console.log(err.message)\n  })\n}\nexport const getMatchParams=(params)=> dispatch =>{\n  localStorage.setItem('params',params) ;\n}\n\n\nexport const fetchProductsById=() => (dispatch) =>{\n\n  \n}","export const ADD_PRODUCTS ='ADD_PRODUCTS';\nexport const PRODUCTS_LOADING ='PRODUCTS_LOADING';\nexport const PRODUCTS_FAILED ='PRODUCTS_FAILED';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAILED = 'LOGOUT_FAILED'\nexport const LOGIN_SUCCESS_CHECK= 'LOGIN_SUCCESS_CHECK'\n\nexport const SIGNUP_SUCCESS= 'SIGNUP_SUCCESS'\nexport const SIGNUP_FAILED= 'SIGNUP_FAILED'\nexport const REQUEST_SIGNUP_CREDENTIALS= 'REQUEST_SIGNUP_CREDENTIALS'\n","import React, { Component } from 'react';\nimport { Collapse, NavbarToggler, ModalBody, Button, FormGroup, Label, Input, Form } from 'reactstrap';\nimport { Jumbotron, Navbar, NavbarBrand, NavItem, Nav, Modal, ModalHeader } from 'reactstrap'\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n\n            signUpSelected: false\n        }\n    }\n    toggleNav = () => {\n        this.setState({ isNavOpen: !this.state.isNavOpen })\n    }\n    toggleModal = () => {\n        this.setState({ isModalOpen: !this.state.isModalOpen })\n    }\n    handleLogin = (event) => {\n        this.toggleModal();\n        this.props.loginUser({ username: this.username.value, password: this.password.value })\n        event.preventDefault();\n    }\n    handleLogOut = (event) => {\n        this.props.logOut()\n        event.preventDefault();\n    }\n    signUp = () => {\n        this.setState({ signUpSelected: !this.state.signUpSelected })\n        this.toggleModal()\n\n    }\n    handleSignUp = (event) => {\n        this.signUp()\n        console.log(this.props)\n        this.props.signupNewUser({ username: this.username.value, password: this.password.value, firstname: this.firstname.value, lastname: this.lastname.value })\n        event.preventDefault();\n    }\n    render() {\n\n        // this.setState({username:this.props.auth.username})\n        return (\n\n            <header>\n                <Navbar dark expand=\"md\" className=\"navbar navbar-default\">\n                    <div className='container' >\n\n                        <div className=\"navbar-header\" >\n                             <NavLink className=\"pull-left d-none d-sm-block \" to=\"/home\" >\n                                <div id=\"logo-img\" >\n                                    <img src=\"/logo.jpeg\" width='100' height=\"80\" alt=\"logo\" />\n                                </div>\n                            </NavLink> \n                            <NavbarBrand className=\"brand-title \" to=\"/home\"  >\n                                <h1 id=\"\">CEDI-MART</h1>\n                            </NavbarBrand>\n                            <div className=\"navbar-toggle\" >\n                                <NavbarToggler onClick={this.toggleNav} className=\"navbar-toggler-btn\" />\n                                <Collapse isOpen={this.state.isNavOpen} navbar >\n                                    <Nav navbar >\n                                        <NavItem >\n                                            <NavLink className=\"nav-link\" to=\"/home\">\n                                                <span className=\"fa fa-home fa-lg\"> Home</span>\n                                            </NavLink>\n                                        </NavItem>\n                                        {this.props.auth.loggedUser ?\n                                            <NavItem>\n                                                <NavLink className=\"nav-link\" to={`/products/${this.props.auth.loggedUser}`}>\n                                                    <span className=\"fa fa-list fa-lg\"> Products</span>\n                                                </NavLink>\n                                            </NavItem> :\n                                            <NavItem>\n                                                <NavLink className=\"nav-link\" to='/products'>\n                                                    <span className=\"fa fa-list fa-lg\"> Products</span>\n                                                </NavLink>\n                                            </NavItem>\n\n                                        }\n\n                                        <NavItem>\n                                            <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                                <span className=\"fa fa-info fa-lg\"> About Us</span>\n                                            </NavLink>\n                                        </NavItem>\n                                        {/* <NavItem>\n    <NavLink className=\"nav-link\" to=\"/contactus\">\n        <span className=\"fa fa-address-card  fa-lg\"> Contact Us</span>\n    </NavLink>\n</NavItem> */}\n\n                                    </Nav>\n                                </Collapse>\n                            </div>\n                            <div className=\"peace-btn d-none d-sm-block\" >\n                            \n                            {!this.props.auth.isAuthenticated ?\n                                       \n                                       <div  className='profile-disp'>\n                                            \n                                           <span  onClick={this.toggleModal} className='navbar-button ' >\n\n                                               {this.props.auth.isLoading ?\n                                                   <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                   : <span className=\"fa fa-sign\">Login</span>\n                                               }\n                                           </span>\n                                           <span  onClick={this.signUp} className='navbar-button'>\n                                               <span className=\"fa fa-sign\">SignUp</span>\n\n                                           </span>\n                                           \n                                       </div>\n                                       :\n                                       \n                                       <div className=\"row profile-disp \" >\n                                           <div className=\"col-8 text-capitalize username\" >{this.props.auth.user.username}</div>\n                                           \n                                           <span  onClick={this.handleLogOut} className='login-btn'>\n                                               {this.props.auth.isLoading ?\n                                                   <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                   : <span className=\"fa fa-sign  logout-btn\">Logout</span>\n                                               }\n                                           </span>\n                                           \n                                             </div>\n                                   }             \n                            </div> \n                                   \n                                   {this.state.isNavOpen ?\n                                     <div className=\"peace-btn  d-md-none  d-lg-none d-xl-none\" >\n                            \n                                     {!this.props.auth.isAuthenticated ?\n                                                \n                                                <div  className='row'>\n                                                     \n                                                    <span  onClick={this.toggleModal} className='navbar-button ' >\n         \n                                                        {this.props.auth.isLoading ?\n                                                            <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                            : <span className=\"fa fa-signup\">Login</span>\n                                                        }\n                                                    </span>\n                                                    <span  onClick={this.signUp} className='navbar-button'>\n                                                        <span className=\"fa fa-sign\">SignUp</span>\n         \n                                                    </span>\n                                                    \n                                                </div>\n                                                :\n                                                \n                                                <div  className='row'>\n                                                    <div className=\"col-12 navbar-button\" >{this.props.auth.user.username}</div>\n                                                    \n                                                    < span onClick={this.handleLogOut} className='navbar-button'>\n         \n                                                        {this.props.auth.isLoading ?\n                                                            <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                            : <span className=\"fa fa-sign  \">Logout</span>\n                                                        }\n                                                    </span>\n                                                    \n                                                      </div>\n                                            }             \n                                     </div> \n                      \n                                    :\n                                    <div></div>\n                                   }\n                           \n                        \n\n                        </div>\n\n                    </div>\n                </Navbar>\n\n                {/* <Jumbotron >\n          <div className=\"container\">\n            <div className=\"row row-header\">\n              <div className=\"col-12 col-sm-6 \">\n                <h1 className='gotron'> Welcome to Nikt</h1>\n                <div >\n                  <h4 >A platform to advertize your products to the world.</h4>\n                </div>\n                <p>Nikt gives you power over your digital marketing.</p>\n              </div>\n            </div>\n          </div>\n        </Jumbotron> */}\n\n                <div>\n                    {!this.state.signUpSelected ?\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n\n                            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                            <ModalBody className=\"ModalBody\">\n                                <Form onSubmit={this.handleLogin}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"username\"> Username</Label>\n                                        <Input type=\"text\" id=\"username\" name=\"username\"\n                                            placeholder=\"username\" innerRef={(input) => this.username = input} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"password\"> Password</Label>\n                                        <Input type=\"password\" id=\"password\" name=\"password\" placeholder='password'\n                                            innerRef={(ps) => this.password = ps} />\n                                    </FormGroup>\n\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\" id=\"remember\" name=\"remember\" />\n                            Remember me\n                            </Label>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Button className=\"bg-primary\" type=\"submit\" value=\"submit\">Sign in</Button>\n                                    </FormGroup>\n                                </Form>\n                            </ModalBody>\n                        </Modal> :\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.signUp}>\n\n                            <ModalHeader toggle={this.signUp}>Register Here</ModalHeader>\n                            <ModalBody className=\"ModalBody\">\n                                <Form onSubmit={this.handleSignUp}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"username\"> Username</Label>\n                                        <Input type=\"text\" id=\"username\" name=\"username\"\n                                            placeholder=\"username\" innerRef={(input) => this.username = input} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"password\"> Password</Label>\n                                        <Input type=\"password\" id=\"password\" name=\"password\" placeholder='password'\n                                            innerRef={(ps) => this.password = ps} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"Firstname\"> First Name</Label>\n                                        <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder='First name'\n                                            innerRef={(fname) => this.firstname = fname} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"Lastname\"> Last Name</Label>\n                                        <Input type=\"text\" id=\"Lastname\" name=\"Lastname\" placeholder='Last name'\n                                            innerRef={(Lastname) => this.lastname = Lastname} />\n                                    </FormGroup>\n\n\n                                    <FormGroup>\n                                        <Button className=\"bg-primary\" type=\"submit\" value=\"submit\">Sign up</Button>\n                                    </FormGroup>\n                                </Form>\n                            </ModalBody>\n                        </Modal>\n                    }\n                </div>\n            </header>\n        );\n    }\n}\nexport default Header;","import React ,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Footer extends Component{\n    render(){\n        return(\n        \n            <div className=\"footer\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4 offset-1 col-sm-2\">\n                            <h5>Links</h5>\n                            <ul className=\"list-unstyled\">\n                                <li><Link to=\"/home\">Home</Link></li>\n                                <li><Link to=\"/aboutus\">About</Link></li>\n                                <li><Link to=\"/menu\">Menu</Link></li>\n                                <li><Link to=\"/contactus\">Contact</Link></li>\n                            </ul>\n                        </div>\n                        <div className=\"col-7 col-sm-5\">\n                            <h5>Contact</h5>\n                            <address>\n\n                                <i className=\"fa fa-phone fa-lg\"></i>: +233 2710 53774<br />\n\n                            </address>\n                        </div>\n                        <div className=\"col-12 col-sm-4 align-self-center\">\n                            <div className=\"text-center\">\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                                <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                                <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                                <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <p>© Copyright 2020 GvTechnologies</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Footer;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction About(props) {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our Objective</h2>\n                    <p> Nikt aims at giving you more power to digitally market your products to the world.</p>\n                    <p> Nikt intends to become one of the world largest online market platform.</p>\n\n                    <p>Nikt gives you the platform to upload images of your product with some few details\n                        about the product and you are good to go. direct your <em> freinds </em>\n                        and <em>customers </em>to your url on nikt to find your products.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                  \n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">“As social media grows and matures, showing a return becomes critical.” </p>\n                                <footer className=\"blockquote-footer\"> Heidi Cohen,<br></br>\n                                <cite title=\"Source Title\">50 Inspirational Marketing Quotes,\n                                https://blog.wishpond.com/post/70494294231/50-inspirational-marketing-quotes-2013</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react'\nimport Home from './home/Home';\nimport Products from './Products'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport {  fetchProducts, loginUser, logoutUser, signupNewUser,\n     postProduct, deleteItem ,getMatchParams} from '../redux/actionCreator';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport Footer from './Footer'\nimport AboutUs from './AboutUs'\n\nconst mapStateToProps = (state) => ({\n    products: state.products,\n    auth: state.auth\n})\nconst mapDispatchToProps = (dispatch ) => ({\n    loginUser:(cred) => dispatch(loginUser(cred)) ,\n    logoutUser:() => dispatch(logoutUser()),\n    signupNewUser:(info) => dispatch(signupNewUser(info)),\n    postProduct : (product) => dispatch(postProduct(product)),\n    deleteItem  : (id) => dispatch(deleteItem(id)),\n    getMatchParams :(params) =>dispatch(getMatchParams(params)),\n    \n    // fetchProductsById :(id) => dispatch(fetchProductsById(id)),\n    \n    fetchProducts: () =>  dispatch(fetchProducts()) \n        \n   \n})\nclass Main extends Component {\n    state={\n        ids:'',\n        counter:0\n\n    }\n    componentDidMount() {\n         this.props.fetchProducts(); \n    }\n\n    render() {\n        //  console.log(this.props.signupNewUser)\n\n        const home = () => {\n            return (\n            <Home \n            products={this.props.products.products}\n            isLoading={this.props.products.isLoading}\n            errMess={this.props.products.errMess}\n            />\n            )\n        }\n\n        const products = ({match}) => {\n            \n                   \n                \n            return (\n                <>\n                  \n                    <Products\n                        getMatchParams = {this.props.getMatchParams(match.params.userId)}\n                        products={this.props.products.products}\n                        isLoading={this.props.products.isLoading}\n                        errMess={this.props.products.errMess}\n                        auth = {this.props.auth}\n                        postProduct= {this.props.postProduct}\n                        deleteItem ={this.props.deleteItem}\n                    />\n                </>\n\n\n            )\n        }\n\n        return (\n            <div>\n            <Header loginUser={this.props.loginUser}\n            auth={this.props.auth} \n            logOut={this.props.logoutUser}\n            signupNewUser={this.props.signupNewUser}\n            />\n            <Switch>\n                <Route path='/home' component={home} />\n                <Route exact path='/products' component={products} />\n                <Route exact path='/products/:userId'  component={products} />\n                <Route exact path='/AboutUs'  component={AboutUs} />\n                <Redirect to=\"/home\" />\n            </Switch>\n            <Footer/>\n            </div>\n            \n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './actionTypes';\n\nexport const productsReducer =(state={\n    isLoading:true,\n    errMess:null,\n    products:[]\n},action)=>{\n    switch (action.type) {\n        case ActionTypes.ADD_PRODUCTS:\n            return {...state, isLoading:false,errMess:null,products:action.payload}\n        case ActionTypes.PRODUCTS_LOADING:\n            return {...state, isLoading:true,errMess:null,products:[]}\n        case ActionTypes.PRODUCTS_FAILED:\n                return {...state, isLoading:false,errMess:action.payload,products:[]}\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './actionTypes';\n\n\nexport const Auth = (state = {\n    isLoading: false,\n    isAuthenticated: localStorage.getItem('token') ? true : false,\n    token: localStorage.getItem('token'),\n    user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')): null,\n    errMess: null,\n    loggedUser:localStorage.getItem('user') ? localStorage.getItem('user'): null\n}, action) => {\nswitch (action.type) {\n    case ActionTypes.LOGIN_REQUEST:\n        return {...state,\n            isLoading: true,\n            isAuthenticated: false,\n            user: action.creds\n        };\n    case ActionTypes.LOGIN_SUCCESS:\n        return {\n            ...state,\n            isLoading: false,\n            isAuthenticated: true,\n            errMess: '',\n            token: action.user_details.token,\n            loggedUser: action.user_details.user_Id,\n            user:action.user_details.creds\n        };\n        \n\n    case ActionTypes.LOGIN_FAILED:\n        return {...state,\n            isLoading: false,\n            isAuthenticated: false,\n            errMess: action.message\n        };\n    case ActionTypes.LOGOUT_REQUEST:\n        return {...state,\n            isLoading: true,\n            isAuthenticated: true,\n           \n        };\n    case ActionTypes.LOGOUT_SUCCESS:\n        return {...state,\n            isLoading: false,\n            isAuthenticated: false,\n            token: '',\n            user: null,\n            loggedUser: null\n        };\n       \n    default:\n        return state\n}\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\nimport {configStore} from './redux/createStore';\nimport {HashRouter,BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  render(){\n    const store= configStore();\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n            <div >\n              <Main/>\n              </div>\n            </BrowserRouter>\n\n      </Provider>\n      \n     );\n  }\n\n}\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport {productsReducer} from './productReducer'\nimport thunk from 'redux-thunk'\nimport {Auth} from './Auth'\n\nexport const configStore = () =>{\n\n    const store= createStore(\n        combineReducers({\n            products:productsReducer,\n            auth:Auth\n        }),\n        applyMiddleware(thunk)\n    )\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}